import React from "react";
import Link from "next/link";
import { Metadata } from "next";
import { ChevronRight, ArrowRight } from "lucide-react";
import { notFound } from "next/navigation";
import {
  generateSchemaOrgWebPage,
  generateSchemaOrgBreadcrumbList,
} from "../../../_lib/profile/schema";

interface PageProps {
  params: {
    locale: string;
    domain: string;
  };
}

// Define domain metadata
const domains = {
  demographics: {
    title: "‡§ú‡§®‡§∏‡§æ‡§Ç‡§ñ‡•ç‡§Ø‡§ø‡§ï‡•Ä ‡§µ‡§ø‡§µ‡§∞‡§£",
    description:
      "‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§ï‡•ã ‡§ú‡§®‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§∏‡§Æ‡•ç‡§¨‡§®‡•ç‡§ß‡•Ä ‡§µ‡§ø‡§∏‡•ç‡§§‡•É‡§§ ‡§µ‡§ø‡§µ‡§∞‡§£ - ‡§ú‡§æ‡§§‡§ø, ‡§≤‡§ø‡§ô‡•ç‡§ó, ‡§â‡§Æ‡•á‡§∞ ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞‡§ï‡•ã ‡§ú‡§®‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§µ‡§ø‡§µ‡§∞‡§£",
    icon: "üë•",
    color: "bg-blue-50 text-blue-700",
    subdomains: [
      {
        id: "caste",
        title: "‡§ú‡§æ‡§§‡•Ä‡§Ø ‡§µ‡§ø‡§µ‡§∞‡§£",
        description:
          "‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§Æ‡§æ ‡§¨‡§∏‡•ã‡§¨‡§æ‡§∏ ‡§ó‡§∞‡•ç‡§®‡•á ‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§ú‡§æ‡§§‡§ú‡§æ‡§§‡§ø‡§π‡§∞‡•Ç‡§ï‡•ã ‡§µ‡§ø‡§µ‡§∞‡§£",
      },
      {
        id: "gender",
        title: "‡§≤‡§ø‡§ô‡•ç‡§ó ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§µ‡§ø‡§µ‡§∞‡§£",
        description: "‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§ï‡•ã ‡§≤‡§ø‡§ô‡•ç‡§ó ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞‡§ï‡•ã ‡§ú‡§®‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§µ‡§ø‡§µ‡§∞‡§£",
      },
      {
        id: "age-distribution",
        title: "‡§â‡§Æ‡•á‡§∞ ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§ú‡§®‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ",
        description: "‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§ï‡•ã ‡§â‡§Æ‡•á‡§∞ ‡§∏‡§Æ‡•Ç‡§π ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞‡§ï‡•ã ‡§ú‡§®‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§µ‡§ø‡§µ‡§∞‡§£",
      },
    ],
  },
  health: {
    title: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§µ‡§ø‡§µ‡§∞‡§£",
    description:
      "‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§ï‡•ã ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ, ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ‡§π‡§∞‡•Ç ‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§Æ‡•ç‡§¨‡§®‡•ç‡§ß‡•Ä ‡§µ‡§ø‡§∏‡•ç‡§§‡•É‡§§ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä",
    icon: "üè•",
    color: "bg-green-50 text-green-700",
    subdomains: [
      {
        id: "facilities",
        title: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§Ç‡§∏‡•ç‡§•‡§æ‡§π‡§∞‡•Ç",
        description: "‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§Æ‡§æ ‡§∞‡§π‡•á‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§Ç‡§∏‡•ç‡§•‡§æ‡§π‡§∞‡•Ç‡§ï‡•ã ‡§µ‡§ø‡§µ‡§∞‡§£",
      },
      {
        id: "indicators",
        title: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•Ç‡§ö‡§ï‡§π‡§∞‡•Ç",
        description: "‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§ï‡•ã ‡§™‡•ç‡§∞‡§Æ‡•Å‡§ñ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•Ç‡§ö‡§ï‡§π‡§∞‡•Ç‡§ï‡•ã ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£",
      },
    ],
  },
  cooperatives: {
    title: "‡§∏‡§π‡§ï‡§æ‡§∞‡•Ä ‡§∏‡§Ç‡§∏‡•ç‡§•‡§æ‡§π‡§∞‡•Ç",
    description:
      "‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§Æ‡§æ ‡§∞‡§π‡•á‡§ï‡§æ ‡§∏‡§π‡§ï‡§æ‡§∞‡•Ä ‡§∏‡§Ç‡§∏‡•ç‡§•‡§æ‡§π‡§∞‡•Ç‡§ï‡•ã ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§∞ ‡§§‡§•‡•ç‡§Ø‡§æ‡§ô‡•ç‡§ï‡§π‡§∞‡•Ç",
    icon: "üè¢",
    color: "bg-yellow-50 text-yellow-700",
    subdomains: [
      {
        id: "list",
        title: "‡§∏‡§π‡§ï‡§æ‡§∞‡•Ä ‡§∏‡§Ç‡§∏‡•ç‡§•‡§æ‡§π‡§∞‡•Ç‡§ï‡•ã ‡§∏‡•Ç‡§ö‡•Ä",
        description:
          "‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§Æ‡§æ ‡§∞‡§π‡•á‡§ï‡§æ ‡§∏‡§π‡§ï‡§æ‡§∞‡•Ä ‡§∏‡§Ç‡§∏‡•ç‡§•‡§æ‡§π‡§∞‡•Ç‡§ï‡•ã ‡§®‡§æ‡§Æ‡§æ‡§µ‡§≤‡•Ä ‡§∞ ‡§µ‡§ø‡§µ‡§∞‡§£",
      },
      {
        id: "statistics",
        title: "‡§∏‡§π‡§ï‡§æ‡§∞‡•Ä ‡§§‡§•‡•ç‡§Ø‡§æ‡§ô‡•ç‡§ï",
        description:
          "‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§Æ‡§æ ‡§∞‡§π‡•á‡§ï‡§æ ‡§∏‡§π‡§ï‡§æ‡§∞‡•Ä ‡§∏‡§Ç‡§∏‡•ç‡§•‡§æ‡§π‡§∞‡•Ç‡§ï‡•ã ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ‡§§‡•ç‡§Æ‡§ï ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£",
      },
    ],
  },
};

export async function generateMetadata({
  params,
}: PageProps): Promise<Metadata> {
  const domain = domains[params.domain as keyof typeof domains];

  if (!domain) {
    return {
      title: "‡§™‡•É‡§∑‡•ç‡§† ‡§´‡•á‡§≤‡§æ ‡§™‡§∞‡•á‡§®",
    };
  }

  return {
    title: `${domain.title} | ‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ ‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤`,
    description: domain.description,
    alternates: {
      canonical: `/${params.locale}/profile/${params.domain}`,
    },
  };
}

export default function DomainPage({ params }: PageProps) {
  const { locale, domain: domainId } = params;
  const domain = domains[domainId as keyof typeof domains];

  if (!domain) {
    notFound();
  }

  // Generate structured data
  const webPageSchema = generateSchemaOrgWebPage(
    `${domain.title} | ‡§ñ‡§ú‡•Å‡§∞‡§æ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ ‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤`,
    domain.description,
    `https://digprofile.com/khajura/${locale}/profile/${domainId}`,
  );

  const breadcrumbSchema = generateSchemaOrgBreadcrumbList([
    { name: "‡§ó‡•É‡§π‡§™‡•É‡§∑‡•ç‡§†", item: `https://digprofile.com/khajura/${locale}` },
    {
      name: "‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤",
      item: `https://digprofile.com/khajura/${locale}/profile`,
    },
    {
      name: domain.title,
      item: `https://digprofile.com/khajura/${locale}/profile/${domainId}`,
    },
  ]);

  return (
    <div>
      {/* Structured data */}
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(webPageSchema) }}
      />
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(breadcrumbSchema) }}
      />

      <div className="prose max-w-none">
        <div
          className={`inline-flex items-center justify-center w-12 h-12 rounded-full ${domain.color} mb-4 text-2xl`}
        >
          {domain.icon}
        </div>
        <h1>{domain.title}</h1>
        <p className="lead text-gray-600">{domain.description}</p>
      </div>

      <div className="mt-8 grid grid-cols-1 sm:grid-cols-2 gap-6">
        {domain.subdomains.map((subdomain) => (
          <Link
            key={subdomain.id}
            href={`/${locale}/profile/${domainId}/${subdomain.id}`}
            className="group bg-white border border-gray-200 rounded-lg p-5 hover:shadow-md transition-shadow"
          >
            <h3 className="text-lg font-medium text-gray-900 mb-2 group-hover:text-green-600">
              {subdomain.title}
            </h3>
            <p className="text-sm text-gray-600 mb-4">
              {subdomain.description}
            </p>
            <div className="flex items-center text-green-600 text-sm font-medium">
              ‡§µ‡§ø‡§∏‡•ç‡§§‡•É‡§§‡§Æ‡§æ ‡§π‡•á‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç
              <ArrowRight className="ml-1 w-4 h-4 group-hover:translate-x-1 transition-transform" />
            </div>
          </Link>
        ))}
      </div>
    </div>
  );
}
