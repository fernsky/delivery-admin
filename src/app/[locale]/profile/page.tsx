import React from "react";
import Link from "next/link";
import { Metadata } from "next";
import DomainCard from "../../_components/profile/DomainCard";
import { ArrowRight } from "lucide-react";
import { generateSchemaOrgWebPage } from "../../_lib/profile/schema";

export const generateMetadata = async (): Promise<Metadata> => {
  return {
    title: "рдЦрдЬреБрд░рд╛ рдЧрд╛рдЙрдБрдкрд╛рд▓рд┐рдХрд╛ рдкреНрд░реЛрдлрд╛рдЗрд▓ - рд╕рдореНрдкреВрд░реНрдг рд╡рд┐рд╡рд░рдг",
    description:
      "рдЦрдЬреБрд░рд╛ рдЧрд╛рдЙрдБрдкрд╛рд▓рд┐рдХрд╛рдХреЛ рд╕рдореНрдкреВрд░реНрдг рд╡рд┐рд╡рд░рдг - рдЬрдирд╕рд╛рдВрдЦреНрдпрд┐рдХреА, рд╕реНрд╡рд╛рд╕реНрдереНрдп, рд╕рд╣рдХрд╛рд░реА, рд╢рд┐рдХреНрд╖рд╛ рд░ рдЕрдиреНрдп рдорд╣рддреНрд╡рдкреВрд░реНрдг рддрдереНрдпрд╛рдЩреНрдХрд╣рд░реВ",
    alternates: {
      canonical: "/profile",
    },
  };
};

export default function ProfilePage({
  params,
}: {
  params: { locale: string };
}) {
  // Define all available domains
  const domains = [
    {
      id: "demographics",
      title: "рдЬрдирд╕рд╛рдВрдЦреНрдпрд┐рдХреА рд╡рд┐рд╡рд░рдг",
      description: "рдЬрд╛рддрд┐, рд▓рд┐рдЩреНрдЧ, рдЙрдореЗрд░ рдЕрдиреБрд╕рд╛рд░рдХреЛ рдЬрдирд╕рдВрдЦреНрдпрд╛ рд╡рд┐рд╡рд░рдг",
      icon: "ЁЯСе",
      color: "bg-blue-50 text-blue-700",
      subdomains: ["caste", "gender", "age-distribution"],
    },
    {
      id: "health",
      title: "рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╡рд┐рд╡рд░рдг",
      description: "рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛, рд╕реБрд╡рд┐рдзрд╛рд╣рд░реВ рд░ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реВрдЪрдХрд╣рд░реВ",
      icon: "ЁЯПе",
      color: "bg-green-50 text-green-700",
      subdomains: ["facilities", "indicators"],
    },
    {
      id: "cooperatives",
      title: "рд╕рд╣рдХрд╛рд░реА рд╕рдВрд╕реНрдерд╛рд╣рд░реВ",
      description: "рд╕рд╣рдХрд╛рд░реА рд╕рдВрд╕реНрдерд╛рд╣рд░реВрдХреЛ рд╡рд┐рд╡рд░рдг рд░ рддрдереНрдпрд╛рдЩреНрдХ",
      icon: "ЁЯПв",
      color: "bg-yellow-50 text-yellow-700",
      subdomains: ["list", "statistics"],
    },
  ];

  // Schema.org structured data
  const schemaData = generateSchemaOrgWebPage(
    "рдЦрдЬреБрд░рд╛ рдЧрд╛рдЙрдБрдкрд╛рд▓рд┐рдХрд╛ рдкреНрд░реЛрдлрд╛рдЗрд▓",
    "рдЦрдЬреБрд░рд╛ рдЧрд╛рдЙрдБрдкрд╛рд▓рд┐рдХрд╛рдХреЛ рд╕рдореНрдкреВрд░реНрдг рд╡рд┐рд╡рд░рдг - рдЬрдирд╕рд╛рдВрдЦреНрдпрд┐рдХреА, рд╕реНрд╡рд╛рд╕реНрдереНрдп, рд╕рд╣рдХрд╛рд░реА, рд╢рд┐рдХреНрд╖рд╛",
    `https://digprofile.com/khajura/${params.locale}/profile`,
  );

  return (
    <div>
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(schemaData) }}
      />

      <div className="prose max-w-none">
        <h1>рдЦрдЬреБрд░рд╛ рдЧрд╛рдЙрдБрдкрд╛рд▓рд┐рдХрд╛ рдкреНрд░реЛрдлрд╛рдЗрд▓</h1>
        <p className="lead text-gray-600">
          рдЦрдЬреБрд░рд╛ рдЧрд╛рдЙрдБрдкрд╛рд▓рд┐рдХрд╛рдХреЛ рд╕рдореНрдкреВрд░реНрдг рд╡рд┐рд╡рд░рдг рд░ рддрдереНрдпрд╛рдЩреНрдХрд╣рд░реВ рдпрд╣рд╛рдБ рдЙрдкрд▓рдмреНрдз рдЫрдиреНред рддрд▓рдХрд╛
          рд╢реНрд░реЗрдгреАрд╣рд░реВрдорд╛ рдХреНрд▓рд┐рдХ рдЧрд░реЗрд░ рд╡рд┐рд╕реНрддреГрдд рдЬрд╛рдирдХрд╛рд░реА рд╣реЗрд░реНрдиреБрд╣реЛрд╕реНред
        </p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 mt-8">
        {domains.map((domain) => (
          <DomainCard key={domain.id} domain={domain} locale={params.locale} />
        ))}
      </div>
    </div>
  );
}
